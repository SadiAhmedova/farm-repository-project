version: '3.9'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=d6oqkpcqg36s6t
      - POSTGRES_USER=uapfi41aogr9q9
      - POSTGRES_PASSWORD=p01b3e060b30342f735b778c7faa44c2889f51319b3a2fa08e6d9915fa8b90848
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U uapfi41aogr9q9" ]
      interval: 5s
      timeout: 10s
      retries: 5

  web:
    build: .
    image: sadidocker/farm_app
    entrypoint: [ "./wait-for-it.sh", "ccaml3dimis7eh.cluster-czz5s0kz4scl.eu-west-1.rds.amazonaws.com:5432", "--timeout=60", "--strict", "--" ]
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn farm_app.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/code
      - ./staticfiles:/tmp/app-resources/staticfiles
      - media_data:/app/media/uploads
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://uapfi41aogr9q9:p01b3e060b30342f735b778c7faa44c2889f51319b3a2fa08e6d9915fa8b90848@ccaml3dimis7eh.cluster-czz5s0kz4scl.eu-west-1.rds.amazonaws.com:5432/d6oqkpcqg36s6t

  nginx:
    image: nginx:latest
    ports:
      - "81:80"
      - "443:443"
    volumes:
      - ./static:/home/app/web/staticfiles
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ./nginx/conf.d/web.conf:/etc/nginx/conf.d/web.conf:ro
    depends_on:
      - web

volumes:
  postgres_data:
  media_data: